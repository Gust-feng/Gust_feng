#想出至少5个你渴望去旅游的地方。·将这些地方存储在一个列表中，并确保其中的元素不是按字母顺序排列的。
list_name=['鸣沙山','莫高窟','河西走廊','玉龙雪山','青海湖']
print(f'这是我想去且未经修改顺序的五个地点：\n\t{list_name}')
#·使用sorted()按字母顺序打印这个列表，同时不要修改它。·再次打印该列表，核实排列顺序未变。·使用sorted()按与字母顺序相反的顺序打印这个列表，同时不要修改它。·再次打印该列表，核实排列顺序未变。·使用reverse()修改列表元素的排列顺序。打印该列表，核实排列顺序确实变了。·使用reverse()再次修改列表元素的排列顺序。打印该列表，核实已恢复到原来的排列顺序。·使用sort()修改该列表，使其元素按字母顺序排列。打印该列表，核实排列顺序确实变了。·使用sort()修改该列表，使其元素按与字母顺序相反的顺序排列。打印该列表，核实排列顺序确实变了。
print(f'这是使用函数"sorted()"修改后的列表:\n\t{sorted(list_name)}')
print(f'但是使用函数"sorted()"并没有修改原列表的值：\n\t{list_name}')
print(f'这是使用函数"sorted()"相反顺序打印的列表:\n\t{sorted(list_name,reverse=True)}')
print(f'即使是这样原列表依旧没有改变:\n\t{list_name}')
list_name.reverse()
print(f'接着使用"reverse()"修改列表顺序:\n\t{list_name}')
list_name.reverse()
print(f'使用"reverse()"修改后再重复使用的结果是:\n\t{list_name}')
#在使用方法reverst()时不应该将方法嵌入在f'{}'中，这样会返回值为None，正确的方式是在f'{}'外进行调用
#对了，再提一嘴，使用方法reverse()时仅仅反转列表元素，并不会对元素排序进行反转。
list_name.sort()
print(f'使用方法"sort()"进行排序:\n\t{list_name}')
list_name.sort(reverse=True)
print(f'这也是使用方法"sort()"进行排序，不过稍作修改为反向排序:\n\t{list_name}')
#在这里方法sort()和方法reverse()一样，要求在print前进行调用